services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ttq_dev}
      POSTGRES_USER: ${POSTGRES_USER:-ttq}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ttq}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ttq} -d ${POSTGRES_DB:-ttq_dev}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port ${PORT:-8080} --proxy-headers
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.dev

  worker:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: celery -A app.services.celery_app.celery_app worker --loglevel=INFO
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env.dev

  tg_bot:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: python -m app.adapters.telegram.run
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    env_file:
      - .env.dev
    environment:
      - BACKEND_BASE_URL=http://backend:8080
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
volumes:
  db_data:
